{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Documentation of wintools","text":""},{"location":"#_1","title":"\u6982\u8981","text":"<p>wintools\u306fWIN\u304a\u3088\u3073hypomh\u95a2\u9023\u306e\u30d5\u30a1\u30a4\u30eb\u3092Python\u3067\u6271\u3046\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\uff0e</p>"},{"location":"#version","title":"version","text":"<p>v0.2.0</p>"},{"location":"#_2","title":"\u4e3b\u306a\u69cb\u6210","text":"<p>\u6271\u3046\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5fdc\u3058\u3066\u30d5\u30a1\u30a4\u30eb\u304c\u5206\u304b\u308c\u3066\u3044\u308b\uff0e</p>"},{"location":"#_3","title":"\u30e9\u30a4\u30bb\u30f3\u30b9","text":"<p>Aki YAMAHANA, MIT\u30e9\u30a4\u30bb\u30f3\u30b9</p>"},{"location":"howto/hypo/final/","title":"\u9707\u6e90\u6c7a\u5b9a\u7d50\u679c\u306e\u8aad\u307f\u8fbc\u307f","text":""},{"location":"howto/hypo/seis/","title":"hypomh\u306b\u3088\u308b\u9707\u6e90\u6c7a\u5b9a","text":"hypomh\u306e\u4f7f\u3044\u65b9 <p>https://wwweic.eri.u-tokyo.ac.jp/WIN/man.ja/hypomh.html</p> <p><pre><code>hypomh stan sies final report [init]\n</code></pre> <code>report</code>\u304c\u4e0d\u8981\u306a\u5834\u5408\u306f<code>/dev/null</code>\u3068\u3059\u308b\uff0e</p>"},{"location":"howto/hypo/seis/#_1","title":"\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099","text":"<p>\u691c\u6e2c\u5024\u30d5\u30a1\u30a4\u30eb<code>seis</code>, \u521d\u671f\u9707\u6e90\u30d5\u30a1\u30a4\u30eb<code>init</code>\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e</p>"},{"location":"howto/hypo/seis/#seis","title":"seis\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210","text":"<p><code>wintools.Seis.make</code>\u3092\u4f7f\u3063\u3066\u691c\u6e2c\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\uff0e \u57fa\u6e96\u6642\u523b\u3068\u89b3\u6e2c\u70b9\u306e\u7def\u5ea6\uff0c\u7d4c\u5ea6\uff0c\u6a19\u9ad8[m]\uff0c10\u6587\u5b57\u4ee5\u5185\u306e\u89b3\u6e2c\u70b9\u30b3\u30fc\u30c9\uff08\u82f1\u6570\u306e\u89b3\u6e2c\u70b9\u540d\uff09\uff0c P,S\u306e\u57fa\u6e96\u6642\u523b\u304b\u3089\u306e\u79d2\u6570\uff0cP,S\u305d\u308c\u305e\u308c\u306e\u4e0d\u78ba\u304b\u3055[s]\u306a\u3069\u304c\u5fc5\u8981\uff0e</p>"},{"location":"howto/hypo/seis/#_2","title":"\u6c17\u8c61\u5e81\u691c\u6e2c\u5024\u30ec\u30b3\u30fc\u30c9\u304b\u3089\u306e\u5909\u63db","text":"<p><code>seisdbpy</code>\u3068\u9023\u643a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e \u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u306f\u6b21\u306e\u901a\u308a\uff0e - \u89b3\u6e2c\u70b9\u30d5\u30a1\u30a4\u30eb\uff08\u9632\u707d\u79d1\u7814\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\uff09 - \u6c17\u8c61\u5e81\u306e\u691c\u6e2c\u5024\u30ec\u30b3\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\uff08\u65b0\u3057\u3044\u3082\u306e\u306f\u9632\u707d\u79d1\u7814\uff0c\u3057\u3070\u3089\u304f\u7d4c\u904e\u3057\u305f\u3082\u306e\u306f\u6c17\u8c61\u5e81\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff09 - \u89b3\u6e2c\u70b9\u88dc\u6b63\u5024\uff08\u6d77\u57df\u89b3\u6e2c\u70b9\u3092\u4f7f\u3046\u5834\u5408\u306b\u5fc5\u8981\uff0e\u6c17\u8c61\u5e81\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff0e\uff09</p> <p>\u307e\u305a<code>seisdbpy</code>\u3067\u6c17\u8c61\u5e81\u306e\u30a4\u30d9\u30f3\u30c8\u30ec\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u53d6\u308b\uff0e <pre><code>df = seisdbpy.read_jma_record(fp)\n</code></pre> \u3053\u3053\u3067\u306f\u5168\u3066\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u305f\u3081\uff0c \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u6642\u523b\uff0c\u4f4d\u7f6e\u306a\u3069\u306b\u3088\u3063\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u7d5e\u308a\u8fbc\u3080\u3068\u826f\u3044\uff0e</p> <p>\u6b21\u306b<code>seisdbpy.jma_record2seis</code>\u30e1\u30bd\u30c3\u30c9\u3067seis\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3059\u308b\uff0e \u3053\u306e\u3068\u304d\u306b\u89b3\u6e2c\u70b9\u30d5\u30a1\u30a4\u30eb\u3068\u89b3\u6e2c\u70b9\u88dc\u6b63\u5024\u3092\u4e0e\u3048\u308b\uff0e <pre><code>    seisdbpy.jma_record2seis(\n        df, # \u8aad\u307f\u8fbc\u3093\u3060\u6c17\u8c61\u5e81\u306e\u30a4\u30d9\u30f3\u30c8\u30ec\u30b3\u30fc\u30c9\n        stationfp, # \u89b3\u6e2c\u70b9\u60c5\u5831\u306e\u30d5\u30a1\u30a4\u30eb\n        stncorrectionfp = stcfp, # \u89b3\u6e2c\u70b9\u88dc\u6b63\u5024\u306e\u30d5\u30a1\u30a4\u30eb\n        pcert = pcert,\n        scert = scert,\n        savedir = seis_savedir,\n    )\n</code></pre> \u3059\u308b\u3068df\u306b\u542b\u307e\u308c\u308b\u30a4\u30d9\u30f3\u30c8\u305d\u308c\u305e\u308c\u306b\u5bfe\u3057\u3066\uff0c <code>savedir</code>\u306b\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bseis\u30d5\u30a1\u30a4\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u308b\uff0e</p>"},{"location":"howto/hypo/seis/#seis_1","title":"\u8907\u6570\u306eseis\u30d5\u30a1\u30a4\u30eb\u306e\u7d50\u5408","text":"<p>\u540c\u4e00\u30a4\u30d9\u30f3\u30c8\u3092\u7570\u306a\u308b\u89b3\u6e2c\u7db2\u3067\u691c\u6e2c\u3057\u305f\u306a\u3069\u306e\u4e8b\u60c5\u306b\u3088\u3063\u3066seis\u30d5\u30a1\u30a4\u30eb\u304c\u8907\u6570\u306b\u5206\u304b\u308c\u3066\u3044\u308b\u5834\u5408\uff0c <code>wintools.Seis</code>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092<code>+</code>\u3067\u300c\u8db3\u3059\u300d\u3053\u3068\u3067\u7d50\u5408\u3057\u305f<code>Seis</code>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3067\u304d\u308b\uff0e</p> <p>\u3057\u305f\u304c\u3063\u3066\uff0c\u4e8c\u3064\u306eseis\u30d5\u30a1\u30a4\u30eb\u3092\u7d50\u5408\u3057\u305f\u3044\u5834\u5408\uff0c \u307e\u305a\u305d\u308c\u305e\u308c\u3092<code>wintools.read_seis</code>\u3067\u8aad\u307f\u8fbc\u307f\uff0c\u305d\u308c\u3089\u3092\u8db3\u3057\u5408\u308f\u305b\u3066\u4e00\u3064\u306b\u3057\u3066\u4fdd\u5b58\u3059\u308c\u3070\u826f\u3044\uff0e <pre><code>seis1 = wintools.read_seis(fp1)\nseis2 = wintools.read_seis(fp2)\nseis = seis1 + seis2\nseis.write(\n    outdir = \"./\",\n    outname = \u4efb\u610f\u306e\u4fdd\u5b58\u540d,\n)\n</code></pre></p>"},{"location":"howto/hypo/seis/#init","title":"init\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210","text":"<p>\u9707\u6e90\u6c7a\u5b9a\u6642\u306e\u521d\u671f\u9707\u6e90\u306e\u4f4d\u7f6e\u3068\u305d\u306e\u4e0d\u78ba\u304b\u3055\u3092\u4e0e\u3048\u308b\u30d5\u30a1\u30a4\u30eb\uff0e init\u30d5\u30a1\u30a4\u30eb\u306e\u4f7f\u7528\u306f\u4efb\u610f\u3067\uff0c\u4e0e\u3048\u306a\u3044\u5834\u5408\u306f\u901f\u5ea6\u69cb\u9020\u30d5\u30a1\u30a4\u30eb<code>stan</code>\u306b\u4e0e\u3048\u3089\u308c\u305f\u3082\u306e\u304c\u7528\u3044\u3089\u308c\u308b\uff0e</p> <p>WIN\u306b\u3088\u308b\u9707\u6e90\u6c7a\u5b9a\u3068\u540c\u4e00\u306e\u51e6\u7406\u306b\u3057\u305f\u3044\u5834\u5408\uff0c \u521d\u671f\u9707\u6e90\u306e\u7def\u5ea6\u3068\u7d4c\u5ea6\u3092\u521d\u3081\u306bP\u6ce2\u304c\u691c\u6e2c\u3055\u308c\u305f\u89b3\u6e2c\u70b9\u306e\u4f4d\u7f6e\u3068\u3059\u308b\uff0e \u3053\u306e\u51e6\u7406\u306e\u305f\u3081\u306einit\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\uff0c <code>wintools.seis2init</code>\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\uff0e seis\u30d5\u30a1\u30a4\u30eb\uff0c\u521d\u671f\u9707\u6e90\u306e\u6df1\u3055[km], \u7def\u5ea6\u30fb\u7d4c\u5ea6\u30fb\u6df1\u3055\u65b9\u5411\u306e\u4e0d\u78ba\u304b\u3055\uff0c\u4fdd\u5b58\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4e0e\u3048\u308b\uff0e</p>"},{"location":"howto/hypo/stan/","title":"\u901f\u5ea6\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406","text":"<p>\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb</p> <p>https://wwweic.eri.u-tokyo.ac.jp/WIN/man.ja/win.html</p> <p>\u4e3b\u306a\u4ed5\u69d8</p> <p>\u901f\u5ea6\u69cb\u9020\u306e\u5c64\u306e\u6570\u306f\u7d0420\u304c\u4e0a\u9650\uff0e \u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u5404\u5c64\u306e\u539a\u3055\u3068\u5c64\u5883\u754c\u306b\u304a\u3051\u308bVp. \u5404\u5c64\u306e\u901f\u5ea6\u306f\u7dda\u5f62\u88dc\u5b8c\u3055\u308c\u308b\uff0e Vs\u3092\u500b\u5225\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u305a\uff0c \\(V_s=V_p / \\sqrt3 \\) \u306e\u95a2\u4fc2\u3068\u5b9a\u3081\u3089\u308c\u3066\u3044\u308b\uff0e</p>"},{"location":"howto/hypo/stan/#_2","title":"\u901f\u5ea6\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210","text":""},{"location":"howto/hypo/traveltime/","title":"hypomh\u306b\u3088\u308b\u8d70\u6642\u8a08\u7b97","text":"<p>hypomh\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb</p> <p>https://wwweic.eri.u-tokyo.ac.jp/WIN/man.ja/hypomh.html</p> <p>hypomh\u306b\u306f\u300c\u8d70\u6642\u8a08\u7b97\u30e2\u30fc\u30c9\u300d\u304c\u3042\u308a\u307e\u3059\u3002 seis \u3068 init \u3092\u6b21\u306e\u5f62\u5f0f\u306b\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001 \u4e0e\u3048\u305f\u901f\u5ea6\u69cb\u9020\u3068\u9707\u6e90\u8981\u7d20\u304b\u3089 \u8a08\u7b97\u3055\u308c\u308b\u5404\u89b3\u6e2c\u70b9\u306e\u7406\u8ad6\u8d70\u6642(P\u3068S\u306e\u5230\u7740\u6642\u523b)\u3092 final \u306b\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002  </p> <p>seis P\u3068S\u306e\u5230\u7740\u6642\u523b\u30c7\u30fc\u30bf\u3092\u3059\u3079\u3066\u30bc\u30ed\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 init \uff13\u884c\u76ee\u3068\u3057\u3066\u9707\u6e90\u8981\u7d20(\u5e74\u3001\u6708\u3001\u65e5\u3001\u6642\u3001\u5206\u3001\u79d2\u3001\u7def\u5ea6\u3001\u7d4c\u5ea6\u3001\u6df1\u3055\u3001M )\u3092 \u9069\u5f53\u306b\u7a7a\u767d\u3067\u533a\u5207\u3063\u3066\u66f8\u3044\u3066\u304f\u3060\u3055\u3044(\" 93 7 22 12 6 2.162 34.76181 140.09901 60.004 2.0\"\u306a\u3069) \u3002</p> <p>hypomh\u306e\u8d70\u6642\u8a08\u7b97\u30e2\u30fc\u30c9\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u306f\uff0c \u3042\u3089\u304b\u3058\u3081\u6307\u5b9a\u3055\u308c\u305fseis\u30d5\u30a1\u30a4\u30eb\u3068init\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e</p>"},{"location":"howto/hypo/traveltime/#1-seis","title":"1. \u8d70\u6642\u8a08\u7b97\u7528seis\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210","text":""},{"location":"howto/hypo/traveltime/#2-init","title":"2. \u8d70\u6642\u8a08\u7b97\u7528init\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210","text":""},{"location":"howto/winfile/process/","title":"\u30c7\u30fc\u30bf\u51e6\u7406","text":""},{"location":"howto/winfile/process/#_1","title":"\u7570\u306a\u308b\u30c1\u30e3\u30f3\u30cd\u30eb\u30c7\u30fc\u30bf\u306e\u7d50\u5408","text":"<p><code>WIN1ch</code>\u30af\u30e9\u30b9\u3084<code>WIN</code>\u30af\u30e9\u30b9\u306f\uff0c\u300c+\u300d\u3067\u8db3\u3059\u3053\u3068\u3067\uff0c\u7570\u306a\u308b\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u7d50\u5408\u3067\u304d\u308b\uff0e</p>"},{"location":"howto/winfile/process/#_2","title":"\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u691c\u7d22","text":"<p><code>WIN.select</code>\u30e1\u30bd\u30c3\u30c9\u3067\uff0c \u89b3\u6e2c\u70b9\u540d\u3084\u6210\u5206\u540d\u3092\u6307\u5b9a\u3057\u3066<code>WIN</code>\u304b\u3089\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u62bd\u51fa\u3067\u304d\u308b\uff0e \u300c*\u300d\u3084\u300c.\u300d(\u307e\u305f\u306f\u300c?\u300d) \u306b\u3088\u308b\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3082\u4f7f\u7528\u53ef\u80fd\uff0e</p> Example <pre><code>import wintools\n\nfp = \"./etc/991109.064607\"\nchtable = \"./etc/991109.064607.ch\"\n\ndat = wintools.read(\n    fp,\n    chtable=chtable,\n    )\ndat.select(\n    station=\"KAG\",\n    component=\"Z\",\n    )\n</code></pre>"},{"location":"howto/winfile/process/#_3","title":"\u30c7\u30fc\u30bf\u306e\u5207\u308a\u51fa\u3057","text":""},{"location":"howto/winfile/process/#win","title":"WIN\u30af\u30e9\u30b9\u304b\u3089\u7279\u5b9a\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u5207\u308a\u51fa\u3057","text":"<p><code>WIN</code>\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\uff0e <code>dat[0]</code>\u3068\u304b<code>dat[\"0200\"]</code>\uff0c<code>dat[1:3]</code>,<code>dat[[\"0200\",\"0201\",\"0203\"]]</code> \u306e\u3088\u3046\u306b\uff0c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u306e\u5358\u4f53\u30fb\u30b9\u30e9\u30a4\u30b9\u304b\uff0c\u6587\u5b57\u5217\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u756a\u53f7\u306e\u5358\u4f53\u30fb\u30ea\u30b9\u30c8\u3092\u4e0e\u3048\u3066\uff0c\u4efb\u610f\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u7d5e\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\uff0e</p> <p>\u5207\u308a\u51fa\u3057\u7d50\u679c\u304c\u5358\u4f53\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u5834\u5408\u306f<code>WIN1ch</code>\u30af\u30e9\u30b9\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e \u5207\u308a\u51fa\u3057\u7d50\u679c\uff0c\u30c1\u30e3\u30f3\u30cd\u30eb\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306f<code>WIN</code>\u30af\u30e9\u30b9\u304c\u51fa\u529b\u3055\u308c\u308b\uff0e</p>"},{"location":"howto/winfile/process/#_4","title":"\u6642\u9593\u65b9\u5411\u306e\u5207\u308a\u51fa\u3057","text":"<p><code>WIN.trim</code>\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\uff0e \u5f15\u6570\u306b\u4e0e\u3048\u305f\u958b\u59cb\u6642\u9593\uff0c\u7d42\u4e86\u6642\u9593\u306e\u533a\u9593\u3067\u30c7\u30fc\u30bf\u3092\u5207\u308a\u51fa\u3059\uff0e \u3044\u305a\u308c\u304b\u306e\u6642\u9593\u3092\u4e0e\u3048\u306a\u3044\uff08\u3082\u3057\u304f\u306fNone\uff09\u5834\u5408\uff0c\u4e0e\u3048\u306a\u304b\u3063\u305f\u65b9\u5411\u306b\u306f\u5207\u308a\u843d\u3068\u3055\u306a\u3044\uff0e</p> <p><code>contain_end</code>\u3092<code>True</code>\u306b\u3059\u308b\u3068\uff0c\u7d42\u4e86\u6642\u9593\u3092\u542b\u3080\u3088\u3046\u306b\u5207\u308a\u51fa\u3059\uff0e</p> Example <pre><code>import wintools\nimport datetime\n\nfp = \"991109.064607\"\nchtbl = \"991109.064607.ch\n\ndat = wintools.read(\n    fp,\n    chtable = chtbl,\n    encoding = \"utf-8\",\n    apply_calib=True,\n)\n\ndat.trim(\n    datetime.datetime(1999, 11, 9, 6, 46, 0),\n    None,\n    contain_end=True,\n)\n</code></pre>"},{"location":"howto/winfile/process/#_5","title":"\u30c7\u30fc\u30bf\u306e\u30d7\u30ed\u30c3\u30c8","text":"<p><code>WIN</code>\u3084<code>WIN1ch</code>\u306e<code>plot</code>\u30e1\u30bd\u30c3\u30c9\uff0e <code>matplotlib</code>\u306b\u6e96\u3058\u3066\u7dda\u306e\u30b9\u30bf\u30a4\u30eb\u306e\u5f15\u6570\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e \u307e\u305f\uff0cfig, ax\u3092\u8fd4\u3059\u306e\u3067\uff0c\u3053\u308c\u3092\u4f7f\u3063\u3066\u5f8c\u304b\u3089\u30d7\u30ed\u30c3\u30c8\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u53ef\u80fd\uff0e</p> <p><code>savefp</code>\u3067\u4fdd\u5b58\u5148\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3068\uff0c\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\uff0e</p> \u8907\u6570\u30c1\u30e3\u30f3\u30cd\u30eb\u30c7\u30fc\u30bf\u306e\u30d7\u30ed\u30c3\u30c8 <p><code>WIN</code>\u30af\u30e9\u30b9\u306b\u3088\u308b\u30d7\u30ed\u30c3\u30c8\uff0e <pre><code>import wintools\nimport pandas as pd\nfrom wintools.lib.win.reader import core\n\nfp = \"./etc/991109.064607\"\nchtable = \"./etc/991109.064607.ch\"\n\ndat = wintools.read(\n    fp,\n    chtable=chtable,\n    encoding = \"utf-8\",\n    apply_calib=True,\n    )\ndat[:3].plot()\n</code></pre> \u8907\u6570\u6ce2\u5f62\u306e\u30d7\u30ed\u30c3\u30c8 </p> \u5358\u30c1\u30e3\u30f3\u30cd\u30eb\u30c7\u30fc\u30bf\u306e\u30d7\u30ed\u30c3\u30c8 <p><code>WIN1ch</code>\u30af\u30e9\u30b9\u306b\u3088\u308b\u30d7\u30ed\u30c3\u30c8\uff0e <code>WIN</code>\u306e0\u756a\u76ee\u306e\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u3044\u308b\uff0e <pre><code>import wintools\nimport pandas as pd\nfrom wintools.lib.win.reader import core\n\nfp = \"./etc/991109.064607\"\nchtable = \"./etc/991109.064607.ch\"\n\ndat = wintools.read(\n    fp,\n    chtable=chtable,\n    encoding = \"utf-8\",\n    apply_calib=True,\n    )\ndat[0].plot()\n</code></pre> \u5358\u6570\u6ce2\u5f62\u306e\u30d7\u30ed\u30c3\u30c8 </p>"},{"location":"howto/winfile/process/#obspy","title":"ObsPy\u3068\u306e\u9023\u643a","text":""},{"location":"howto/winfile/process/#obspy_1","title":"ObsPy\u3078\u306e\u6ce2\u5f62\u30c7\u30fc\u30bf\u51fa\u529b","text":"<p><code>WIN</code>\u307e\u305f\u306f<code>WIN1ch</code>\u30af\u30e9\u30b9\u306e<code>to_obspy</code>\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\uff0e <code>WIN1ch</code>\u3067\u3042\u308c\u3070<code>obspy.Trace</code>\u3092\uff0c <code>WIN</code>\u3067\u3042\u308c\u3070<code>obspy.Stream</code>\u3092\u51fa\u529b\u3059\u308b\uff0e</p> <p>WIN\u30d5\u30a1\u30a4\u30eb\u306b\u30c7\u30fc\u30bf\u304c\u306a\u3044\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u540d\uff0c\u5730\u57df\u540d\u306f\u4ed8\u4e0e\u3055\u308c\u306a\u3044\uff0e</p>"},{"location":"howto/winfile/process/#obspywin","title":"ObsPy\u304b\u3089WIN\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5909\u63db","text":"<p><code>wintools.from_obspy</code>\u95a2\u6570\u3092\u4f7f\u3046\uff0e \u5f15\u6570\u306bobspy\u306e<code>Trace</code>\u307e\u305f\u306f<code>Stream</code>\u3092\u4e0e\u3048\u308b\u3068\uff0c\u305d\u308c\u305e\u308c<code>WIN1ch</code>\u307e\u305f\u306f<code>WIN</code>\u30af\u30e9\u30b9\u3092\u51fa\u529b\u3059\u308b\uff0e</p> <p>\u307e\u305f\uff0c<code>chtable</code>\u5f15\u6570\u3092\u4e0e\u3048\u308b\u3068\uff0c<code>wintools.read</code>\u3068\u540c\u69d8\u306b\u30c1\u30e3\u30f3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3092\u4ed8\u52a0\u3067\u304d\u308b\uff0e</p>"},{"location":"howto/winfile/read/","title":"\u8aad\u307f\u8fbc\u307f\u3068\u57fa\u672c\u64cd\u4f5c","text":""},{"location":"howto/winfile/read/#win","title":"WIN\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f","text":""},{"location":"howto/winfile/read/#_1","title":"\u6982\u8981","text":"<p><code>wintools.read</code>\u95a2\u6570\u3092\u4f7f\u3046\uff0e \u5f15\u6570\u306b\u306fWIN\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u4e0e\u3048\u308b\uff0e \u623b\u308a\u5024\u306f<code>WIN</code>\u30af\u30e9\u30b9, \u5358\u6570\u30c1\u30e3\u30cd\u30eb\u306e\u5834\u5408\u306f<code>WIN1ch</code>\u30af\u30e9\u30b9\u3067\u3042\u308b\uff0e</p> <ul> <li><code>fp</code>\u5f15\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6587\u5b57\u5217\uff08\u8907\u6570\u3042\u308c\u3070\u305d\u306e\u30ea\u30b9\u30c8\uff09\u3067\u4e0e\u3048\u308b\uff0e</li> <li>\u3082\u3057\u3082\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u672b\u5c3e\u306b\u300c.ch\u300d\u3067\u4e0e\u3048\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3059\u308c\u3070\uff0c \u81ea\u52d5\u7684\u306b\u305d\u306e\u30c1\u30e3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u3082\u8aad\u307f\u8fbc\u3080\uff0e</li> <li><code>chtable</code>\u5f15\u6570\u3067\u660e\u793a\u7684\u306b\u30c1\u30e3\u30f3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4e0e\u3048\u308b\u3068\uff0c\u305d\u306e\u60c5\u5831\u3092\u8aad\u307f\u8fbc\u3093\u3067\uff0c<code>WIN.chtable</code>\u306b\u683c\u7d0d\u3059\u308b\uff0e</li> <li><code>sort</code>\u5f15\u6570\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f<code>True</code>\uff09\u306b\u3088\u3063\u3066\uff0c\u51fa\u529b\u3055\u308c\u308b<code>WIN</code>\u30af\u30e9\u30b9\u3092\u30c1\u30e3\u30f3\u30cd\u30eb\u756a\u53f7\u9806\u306b\u4e26\u3079\u66ff\u3048\u308b\u304b\u3069\u3046\u304b\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\uff0e</li> </ul> Example <pre><code>import wintools\nfp = \"991109.064607\"\n\ndat = wintools.read(\n    fp,\n)\n</code></pre>"},{"location":"howto/winfile/read/#_2","title":"\u30c1\u30e3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u306e\u4ed8\u52a0","text":"<p>\u30c1\u30e3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308b\u306a\u3089\uff0c\u5f15\u6570\u306b\u4e0e\u3048\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\uff0e</p> <p><code>chtable</code>\u306b\u30c1\u30e3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u4e0e\u3048\u308b\u3053\u3068\u3067\uff0c \u89b3\u6e2c\u70b9\u540d\uff0c\u6210\u5206\u540d\uff0c\u632f\u5e45\u500d\u7387\u306e\u60c5\u5831\u3082\u30c7\u30fc\u30bf\u306b\u4fdd\u6301\u3067\u304d\u308b\uff0e <code>encoding</code>\u3067\u30c1\u30e3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\uff0e <code>apply_chtbl</code>\u3092<code>True</code>\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u306f<code>False</code>\uff09\u306b\u3059\u308b\u3068\uff0c\u30c1\u30e3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u306e\u5024\u3092\u4f7f\u3063\u3066\u632f\u5e45\u3092\u7269\u7406\u91cf\u3078\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3059\u308b\uff0e</p> Example <pre><code>import wintools\n\nfp = \"991109.064607\"\nchtbl = \"991109.064607.ch\n\ndat = wintools.read(\n    fp,\n    chtable = chtbl,\n    encoding = \"utf-8\",\n    apply_calib=True,\n)\n</code></pre>"},{"location":"howto/winfile/read/#win_1","title":"\u8907\u6570WIN\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f","text":"<p><code>wintools.read</code>\u95a2\u6570\u3067\uff0cfp\u5f15\u6570\u306b\u30ea\u30b9\u30c8\u3092\u4e0e\u3048\u308b\uff0e \u3053\u306e\u30ea\u30b9\u30c8\u306f\uff0c\u6642\u9593\u65b9\u5411\u306b\u9023\u7d9a\u3057\u305fWIN\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e</p> <p>\u30c1\u30e3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u3084sort\u306e\u8a2d\u5b9a\u306f\uff0c\u5358\u4f53\u30d5\u30a1\u30a4\u30eb\u306e\u6642\u3068\u540c\u69d8\uff0e</p> <p>\u3055\u3089\u306b\uff0cfp\u306b\u5019\u88dc\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4e0e\u3048\u305f\u4e0a\u3067\uff0c <code>targettime</code>, <code>beforesec</code>, <code>aftersec</code>\u3092\u6307\u5b9a\u3059\u308b\u3068\uff0c \u5019\u88dc\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u304b\u3089\u6307\u5b9a\u3057\u305f\u6642\u523b\u7bc4\u56f2\u306e\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3057\u3066\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\uff0e</p> Example <pre><code>import wintools\nimport glob\nimport datetime\n\ntar = sorted(glob.glob(\"./data/win/*.*\"))\nchtbl = \"./data/chtbl.tbl\"\n\ndat = wintools.read(\n    tar,\n    chtbl,\n    targettime  = datetime.datetime(2023,10,29,11,25,30),\n    beforesec = 5,\n    aftersec = 60,\n    # filenameformat = \"%y%m%d%H.%M\",\n    )\n</code></pre>"},{"location":"howto/winfile/write/","title":"\u4fdd\u5b58","text":""},{"location":"howto/winfile/write/#win","title":"WIN\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u306e\u4fdd\u5b58","text":"<p><code>WIN</code>\u3082\u3057\u304f\u306f<code>WIN1ch</code>\u30af\u30e9\u30b9\u306e<code>write</code>\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3067\uff0c \u6ce2\u5f62\u30c7\u30fc\u30bf\u3092WIN\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u4fdd\u5b58\u3067\u304d\u308b\uff0e</p> <p><code>WIN.write</code>\u306e\u5834\u5408\uff0c <code>savename</code>\u5f15\u6570\u306b\u4fdd\u5b58\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3059\u308b\uff0e <code>savedir</code>\u3092\u4e0e\u3048\u308b\u3068\uff0c\u5185\u90e8\u3067<code>savedir</code>\u3068<code>savename</code>\u3092\u7d50\u5408\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u751f\u6210\u3059\u308b\uff0e <code>savedir</code>\u5f15\u6570\u3060\u3051\u4e0e\u3048\u3066<code>savename</code>\u3092\u4e0e\u3048\u306a\u3044\u3068\uff0c\u30c7\u30fc\u30bf\u306e\u958b\u59cb\u6642\u523b\u304b\u3089\u81ea\u52d5\u7684\u306b\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u751f\u6210\u3055\u308c\u308b\uff0e \u81ea\u52d5\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u300cyyyymmdd.HHMMSS.win\u300d\u3067\u3042\u308b\uff0e</p> <p>WIN\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u304a\u3051\u308b\u30b5\u30f3\u30d7\u30eb\u30b5\u30a4\u30ba\u306f\uff0c \u6307\u5b9a\u3057\u306a\u3044\u9650\u308a\u81ea\u52d5\u7684\u306b\u5bb9\u91cf\u304c\u6700\u5c0f\u306b\u306a\u308b\u3082\u306e\u304c\u9078\u629e\u3055\u308c\u308b\uff0e</p> <p>Info</p> <p>\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u4ed5\u69d8\u4e0a\uff0c\u30c7\u30fc\u30bf\u306f1\u79d2\u5358\u4f4d\u306e\u9577\u3055\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff0e \u4fdd\u5b58\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u30c7\u30fc\u30bf\u306e\u4e21\u7aef\u306e\u6642\u523b\u304c1\u79d2\u533a\u5207\u308a\u3067\u306a\u3044\u5834\u5408\u306f <code>boundary</code>\u5f15\u6570\u3067\u305d\u306e\u7aef\u70b9\u306e\u51e6\u7406\u65b9\u6cd5\u3092\u9078\u629e\u3067\u304d\u308b\uff0e - 1. <code>cut</code> : \u7aef\u70b9\u3092\u5207\u308a\u6368\u3066\u308b\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09 - 2. <code>padding</code> : \u7aef\u70b9\u3092\u30c7\u30fc\u30bf\u4e21\u7aef\u306e\u5024\u3067\u57cb\u3081\u308b - 3. <code>zero-padding</code> : \u7aef\u70b9\u30920\u3067\u57cb\u3081\u308b</p>"},{"location":"module/hypomh/","title":"hypomh\u95a2\u9023","text":"<p>hypomh\u306e\u30b3\u30de\u30f3\u30c9\u306b\u95a2\u9023\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\uff0e</p> hypomh\u306e\u4f7f\u3044\u65b9 <p>https://wwweic.eri.u-tokyo.ac.jp/WIN/man.ja/hypomh.html</p> <p><pre><code>hypomh stan seis final report [init]\n</code></pre> <code>report</code>\u304c\u4e0d\u8981\u306a\u5834\u5408\u306f<code>/dev/null</code>\u3068\u3059\u308b\uff0e</p>"},{"location":"module/hypomh/#_1","title":"\u4ed5\u69d8","text":"<p>\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u6a5f\u80fd\u306f\u4ee5\u4e0b\u306e\u8868\u306e\u3068\u304a\u308a\uff0e</p> \u30d5\u30a1\u30a4\u30eb \u6982\u8981 \u4f5c\u6210 \u8aad\u307f\u8fbc\u307f <code>stan</code> \u901f\u5ea6\u69cb\u9020 <code>mkstan</code> <code>seis</code> \u691c\u6e2c\u5024 <code>Seis.make</code> <code>Seis.read</code> <code>final</code> \u9707\u6e90\u6c7a\u5b9a\u7d50\u679c <code>Final.read</code> <code>init</code> \u521d\u671f\u9707\u6e90 <code>mkinit</code>"},{"location":"module/hypomh/final/","title":"Final","text":"<p>Modules for handling final file of hypomh.</p> History <ul> <li>v0.2.0<ul> <li>remove conventional Final.read and replaced by Final.read2 (2024/07/03)</li> <li>comment out Final.write (2024/07/03)</li> <li>enhance Final.read (2024/07/03)<ul> <li>read info of each station and std of O-C of P, S.</li> </ul> </li> </ul> </li> </ul>"},{"location":"module/hypomh/final/#wintools.lib.final.final.logger","title":"<code>logger = logging.getLogger(__name__)</code>  <code>module-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final","title":"<code>Final</code>","text":"<p>handle final file of hypomh.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Raw text from final file.</p> required <code>origintime</code> <code>datetime</code> <p>Origin time.</p> required <code>lat</code> <code>float</code> <p>Hypocenter latitude in degrees.</p> required <code>lon</code> <code>float</code> <p>Hypocenter longitude in degrees.</p> required <code>dep_km</code> <code>float</code> <p>Hypocenter depth in km. Downward is positive.</p> required <code>mag</code> <code>float</code> <p>Magnitude. Get np.nan if not calculated.</p> required <code>diag</code> <code>str</code> <p>Diagnosis by hypomh. <code>CONV</code>, <code>NOCN</code>, <code>DEEP</code>, <code>AIRF</code></p> required <code>cxx</code> <p>Covariance matrix.</p> required <code>cxy</code> <p>Covariance matrix.</p> required <code>initlat</code> <code>float</code> <p>Initial hypocenter.</p> required <code>initlon</code> <code>float</code> <p>Initial hypocenter.</p> required <code>initdep</code> <code>float</code> <p>Initial hypocenter.</p> required <code>initlatunc</code> <code>float</code> <p>Uncertainty of initial hypocenter.</p> required <code>initlonunc</code> <code>float</code> <p>Uncertainty of initial hypocenter.</p> required <code>initdepunc</code> <code>float</code> <p>Uncertainty of initial hypocenter.</p> required <code>n_station</code> <code>int</code> <p>Number of stations.</p> required <code>model</code> <code>str</code> <p>Velocity structure model.</p> required <code>n_p</code> <code>int</code> <p>Number of P, S, initial data. n_init is always 3.</p> required <code>n_s</code> <code>int</code> <p>Number of P, S, initial data. n_init is always 3.</p> required <code>n_init</code> <code>int</code> <p>Number of P, S, initial data. n_init is always 3.</p> required <code>contrib_p</code> <code>float</code> <p>Contribution of P, S, initial data.</p> required <code>contrib_s</code> <code>float</code> <p>Contribution of P, S, initial data.</p> required <code>contrib_init</code> <code>float</code> <p>Contribution of P, S, initial data.</p> required <code>arrivals</code> <code>DataFrame</code> <p>Arrival information of each station.</p> required <code>poc_std</code> <code>float</code> <p>Standard deviation of O-C of P, S.</p> required <code>soc_std</code> <code>float</code> <p>Standard deviation of O-C of P, S.</p> required Exaple <pre><code>fp = \"fp/for/final\"\nfinal = Final()\nfinal.read(fp)\n</code></pre> Official documentation of win (pickfile) <p>\uff11\u884c\u76ee\u306f\u9707\u6e90\u6642\u30fb\u7def\u5ea6(\u5ea6)\u3001\u7d4c\u5ea6(\u5ea6)\u3001\u6df1\u3055(km)\u30fb\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9\u3001 \uff12\u884c\u76ee\u306f\u8a3a\u65ad\uff08\"CONV\"\u30fb\"NOCN\"\u30fb\"DEEP\"\u30fb\"AIRF\"\u3069\uff09\u3068\u7d50\u679c\u306e\u8aa4\u5dee \uff08\u79d2\u304a\u3088\u3073 km\u5358\u4f4d\uff09\u3067\u3059\u3002\u305f\u3060\u3057\u9707\u6e90\u6642\u306e\u8aa4\u5dee\u306f\u5e38\u306b\uff10\u3067\u610f\u5473\u304c\u3042\u308a\u307e\u305b\u3093\u3002 \uff13\u884c\u76ee\u306f\u8aa4\u5dee\u5171\u5206\u6563\u884c\u5217\u306e\uff16\u3064\u306e\u6210\u5206\u3067\u3001\u6771\u3092x\u3001\u5357\u3092y\u3001\u4e0b\u3092z\u306b \u3068\u3063\u305f km \u5358\u4f4d\u306e\u5ea7\u6a19\u7cfb\u3067\u3001Cxx,Cxy,Cxz,Cyy,Cyz,Czz\u306e\u9806\u3067\u3059\u3002 \u5f93\u3063\u3066\uff12\u884c\u76ee\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u30fb\u6df1\u3055\u306e\u8aa4\u5dee\u306e\u81ea\u4e57\u304c\u3001\u305d\u308c\u305e\u308c Cyy,Cxx,Czz\u306b \u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002 \uff14\u884c\u76ee\u306f\u4e0e\u3048\u305f\u521d\u671f\u9707\u6e90\u306e\u4f4d\u7f6e\u304a\u3088\u3073\u305d\u306e\u4e0d\u78ba\u5b9a\u3055 \u3067\u3001\u7def\u5ea6(\u5ea6)\u30fb\u7def\u5ea6\u306e\u4e0d\u78ba\u5b9a\u3055(km)\u30fb\u7d4c\u5ea6(\u5ea6)\u30fb\u7d4c\u5ea6\u306e\u4e0d\u78ba\u5b9a\u3055(km)\u30fb \u6df1\u3055(km)\u30fb\u6df1\u3055\u306e\u4e0d\u78ba\u5b9a\u3055(km)\u3067\u3059\u3002 \uff15\u884c\u76ee\u306f\u5de6\u304b\u3089\u3001\u89b3\u6e2c\u70b9\u6570\u3001\u901f\u5ea6\u69cb\u9020 \u30e2\u30c7\u30eb\u540d\u3001P\u6642\u523b\u30c7\u30fc\u30bf\u306e\u6570\u3001S\u6642\u523b\u30c7\u30fc\u30bf\u306e\u6570\u3001\u521d\u671f\u5024\u30c7\u30fc\u30bf\u306e\u6570\uff08\u3053\u308c\u306f \u521d\u671f\u9707\u6e90\u306e\u5ea7\u6a19\u306a\u306e\u3067\u5e38\u306b\uff13\uff09\u3067\u3001\u62ec\u5f27\u5185\u306f\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u304b\u3089\u306e\u5bc4\u4e0e\u306e \u5272\u5408\u304c\u30d1\u30fc\u30bb\u30f3\u30c8\u3067\u793a\u3055\u308c\u3066\u3044\u307e\u3059\uff08\u305f\u3060\u3057hypomh\u306e\u4f5c\u8005\u306b\u3088\u308b\u3068 P,S\u305d\u308c\u305e\u308c\u306e\u30d1\u30fc\u30bb\u30f3\u30c8\u8868\u793a\u306f\u554f\u984c\u304c\u3042\u3063\u3066\u3001\u4e21\u8005\u306e\u548c\u306f\u4fe1\u7528\u3067\u304d\u308b\u3001 \u3068\u306e\u3053\u3068\uff09\u3002 \uff16\u884c\u76ee\u304b\u3089\u306f\u5404\u89b3\u6e2c\u70b9\u3054\u3068\u306e\u7d50\u679c\u304c\u89b3\u6e2c\u70b9\u6570\u3060\u3051\u3042\u3063\u3066\u3001\u5404\u884c\u306e\u5185\u5bb9\u306f\u3001 \u5de6\u304b\u3089\u3001\u89b3\u6e2c\u70b9\u30b3\u30fc\u30c9\u30fbP\u6975\u6027\u30fb\u9707\u592e\u8ddd\u96e2(km)\u30fb\u89b3\u6e2c\u70b9\u65b9\u4f4d\uff08\u5317\u304b\u3089\u6771\u56de\u308a (\u5ea6\uff09\uff09\u30fb\u5c04\u51fa\u89d2\uff08\u4e0b\u304b\u3089(\u5ea6\uff09\uff09\u30fb\u5165\u5c04\u89d2\uff08\u4e0b\u304b\u3089(\u5ea6\uff09\uff09\u30fb\u89b3\u6e2c\u70b9\u88dc\u6b63\u5f8c\u306e P\u6642\u523b(s)\u30fbP\u7cbe\u5ea6(s)\u30fbP\u6642\u523b\u306eO-C(s)\u30fb\u89b3\u6e2c\u70b9\u88dc\u6b63\u5f8c\u306eS\u6642\u523b(s)\u30fbS\u7cbe\u5ea6(s)\u30fb S\u6642\u523b\u306eO-C(s)\u30fb\u6700\u5927\u632f\u5e45(m/s)\u30fb\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u6700\u5927\u632f\u5e45 \u30c7\u30fc\u30bf\u304c\u306a\u304f\u3066F-P\u6642\u9593\u30c7\u30fc\u30bf\u304c\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u6700\u5927\u632f\u5e45\u306e\u4ee3\u308f\u308a\u306b F-P\u6642\u9593(s)\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002F-P\u6642\u9593\u306e\u5834\u5408\u306f\u4e00\u822c\u306b\u5024\u304c\uff11\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3059 \u306e\u3067\u3001\u5024\u304b\u3089\u3053\u306e\u5224\u5225\u306f\u5bb9\u6613\u3067\u3059\u3002\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9\u306f\u3001\u6700\u5927\u632f\u5e45\u30c7\u30fc\u30bf\u304c\u3042\u308b \u5834\u5408\u306f\u6e21\u8fba(1971)\u306e\u5f0f\u3092\u3001F-P\u6642\u9593\u30c7\u30fc\u30bf\u3057\u304b\u306a\u3044\u5834\u5408\u306f\u6d25\u6751(1967)\u306e\u5f0f\u3092\u3001 \u305d\u308c\u305e\u308c\u4f7f\u3063\u3066\u6c42\u3081\u3089\u308c\u3066\u3044\u3066\u3001\u5024\"9.9\"\u306f\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9\u672a\u6c7a\u5b9a\u306e\u610f\u5473\u3067\u3059\u3002 \u6700\u5f8c\u306e\u884c\u306f\u3001P\u6642\u523b\u306eO-C\u3068S\u6642\u523b\u306eO-C\u306e\u305d\u308c\u305e\u308c\u306e\u6a19\u6e96\u504f\u5dee(s)\u3067\u3059\u3002 \u9707\u6e90\u304c\u3088\u304f\u6c7a\u307e\u3063\u305f\u5834\u5408\u306f\u3001\u5404\u89b3\u6e2c\u70b9\u306eO-C\u6642\u9593\u304c\u7cbe\u5ea6\u3068\u540c\u7a0b\u5ea6\u4ee5\u4e0b\u306b \u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002</p>"},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.arrivals","title":"<code>arrivals: pd.DataFrame</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.contrib_init","title":"<code>contrib_init: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.contrib_p","title":"<code>contrib_p: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.contrib_s","title":"<code>contrib_s: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.cov","title":"<code>cov: np.ndarray</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.cxx","title":"<code>cxx: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.cxy","title":"<code>cxy: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.cyy","title":"<code>cyy: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.cyz","title":"<code>cyz: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.czz","title":"<code>czz: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.dep_km","title":"<code>dep_km: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.deperror","title":"<code>deperror: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.diag","title":"<code>diag: str</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.initdep","title":"<code>initdep: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.initdepunc","title":"<code>initdepunc: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.initlat","title":"<code>initlat: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.initlatunc","title":"<code>initlatunc: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.initlon","title":"<code>initlon: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.initlonunc","title":"<code>initlonunc: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.lat","title":"<code>lat: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.laterror","title":"<code>laterror: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.lon","title":"<code>lon: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.lonerror","title":"<code>lonerror: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.mag","title":"<code>mag: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.model","title":"<code>model: str</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.n_init","title":"<code>n_init: int</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.n_p","title":"<code>n_p: int</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.n_s","title":"<code>n_s: int</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.n_station","title":"<code>n_station: int</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.origintime","title":"<code>origintime: datetime.datetime</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.poc_std","title":"<code>poc_std: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.soc_std","title":"<code>soc_std: float</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.text","title":"<code>text: str</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.__init__","title":"<code>__init__()</code>","text":"<p>generate Final object.</p>"},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.read","title":"<code>read(fp)</code>","text":"<p>read final file by hypomh.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>file path for final file.</p> required See Also <p>hypomh.f l.237- <pre><code>2100 FORMAT('***** FINAL RESULTS *****')\n    WRITE( 6,2200) IYR,MNT,IDY,IHR,MIN,COT,ALATF,ALNGF,XM1(3)\n    *              ,AMAG\n    WRITE(22,2200) IYR,MNT,IDY,IHR,MIN,COT,ALATF,ALNGF,XM1(3)\n    *              ,AMAG\n    WRITE(21,2200) IYR,MNT,IDY,IHR,MIN,COT,ALATF,ALNGF,XM1(3)\n    *              ,AMAG\n    WRITE(22,2210) DIAG,EOT,EX1(2),EX1(1),EX1(3)\n    WRITE(21,2210) DIAG,EOT,EX1(2),EX1(1),EX1(3)\n    WRITE( 6,2210) DIAG,EOT,EX1(2),EX1(1),EX1(3)\n    WRITE(22,2220) H(1,1),-H(1,2),H(1,3),H(2,2),-H(2,3),H(3,3)\n    WRITE(21,2220) H(1,1),-H(1,2),H(1,3),H(2,2),-H(2,3),H(3,3)\n    WRITE( 6,2220) H(1,1),-H(1,2),H(1,3),H(2,2),-H(2,3),H(3,3)\n    WRITE(22,2230) ALATI,EX0(2),ALNGI,EX0(1),XM0(3),EX0(3)\n    WRITE(21,2230) ALATI,EX0(2),ALNGI,EX0(1),XM0(3),EX0(3)\n    WRITE( 6,2230) ALATI,EX0(2),ALNGI,EX0(1),XM0(3),EX0(3)\n    WRITE(22,2240) ND,VST,NPD,RSL(1),NSD,RSL(2),NPR,RSL(3)\n    WRITE(21,2240) ND,VST,NPD,RSL(1),NSD,RSL(2),NPR,RSL(3)\n    WRITE( 6,2240) ND,VST,NPD,RSL(1),NSD,RSL(2),NPR,RSL(3)\n......\n2200 FORMAT(3I3.2,3X,2I3,F8.3,2F11.5,    F8.3,F6.1)\n2210 FORMAT(3X,A4,11X, F8.3,2(F9.3,2X),F8.3)\nC 2220 FORMAT(2(F8.3,1X),F8.3,2(F9.3,2X),F8.3)\n2220 FORMAT(6F10.3)\n2230 FORMAT(12X,3(F7.3,1X,F5.1,1X))\n2240 FORMAT(2X,I3,1X,A4,1X,3(I3,1X,'(',F5.1,'%',1X,')',1X))\n</code></pre></p>"},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.xyellipse","title":"<code>xyellipse()</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.xzellipse","title":"<code>xzellipse()</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.Final.yzellipse","title":"<code>yzellipse()</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.cov2ellipse","title":"<code>cov2ellipse(cxx, cyy, cxy)</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.linux","title":"<code>linux(command, verbose=False)</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.read_final","title":"<code>read_final(fp)</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.read_finals","title":"<code>read_finals(fplist)</code>","text":""},{"location":"module/hypomh/final/#wintools.lib.final.final.yy2yyyy","title":"<code>yy2yyyy(yy)</code>","text":"<p>Convert yy of hypomh to yyyy.</p>"},{"location":"module/hypomh/init/","title":"Init","text":"<p>hypomh\u306einit\uff08\u521d\u671f\u5024\uff09\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\uff0e</p> <p>-- \u521d\u671f\u5024\u306e\u30d5\u30a1\u30a4\u30eb\u3002\u521d\u671f\u9707\u6e90\u306e\u7def\u5ea6(\u5ea6)\u3001\u7d4c\u5ea6(\u5ea6)\u3001 \u6df1\u3055(km)\u3092\uff11\u884c\u76ee\u306b\u3001 \u305d\u308c\u305e\u308c\u306e\u4e0d\u78ba\u5b9a\u3055(km)\u3092\uff12\u884c\u76ee\u306b\u66f8\u304f\u3002 \u5024\u306f\u3044\u305a\u308c\u3082\u5c0f\u6570\u70b9\u4ed8\u304d\u3067\u3001\u5404\u9805\u76ee\u306e\u5e45\u306f10\u6841\u305a\u3064\u3002 \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3001\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306b\u6307\u5b9a\u3057\u305f\u5024\u304c\u4f7f\u308f\u308c\u308b\u3002</p> <p>-- \u8d70\u6642\u8a08\u7b97\u30e2\u30fc\u30c9     \uff08calc_tt = True\u3068\u3059\u308b\uff09 \uff13\u884c\u76ee\u3068\u3057\u3066\u9707\u6e90\u8981\u7d20(\u5e74\u3001\u6708\u3001\u65e5\u3001\u6642\u3001\u5206\u3001\u79d2\u3001\u7def\u5ea6\u3001\u7d4c\u5ea6\u3001\u6df1\u3055\u3001M )\u3092 \u9069\u5f53\u306b\u7a7a\u767d\u3067\u533a\u5207\u3063\u3066\u66f8\u3044\u3066\u304f\u3060\u3055\u3044(\" 93 7 22 12 6 2.162 34.76181 140.09901 60.004 2.0\"\u306a\u3069) \u3002</p> See Also <p>hypomh.f l.103- <pre><code>        OPEN(12,FILE=FILE,STATUS='OLD')\n        READ(12,100) ALAT00,ALNG00,DEPT00\n        READ(12,100) ELAT00,ELNG00,EDPT00\n......\n100 FORMAT(3F10.3)\n</code></pre></p>"},{"location":"module/hypomh/seis/","title":"Seis","text":"<p>Module for seis file of hypomh, a file about arrival time picks.</p> Future Update <ul> <li>v0.2.1<ul> <li>remove mkseis</li> </ul> </li> </ul> History <ul> <li>v0.2.0<ul> <li>add WIN</li> <li>remove <code>read_seis</code>: because it was under editing but now available with Seis.</li> <li>add Seis</li> <li>move <code>mkseis</code> to Seis     <code>mkseis</code> is now a static method of class <code>Seis</code>.     When use <code>mkseis</code>, use <code>Seis.make</code>.</li> <li>edit Final     renew read</li> <li>bug fix     conversion from yy to yyyy:         yyyy = 1000 + yy -&gt; 1\"9\"00 + yy     fatal error in pnd2seis:         second was contained in reftime.         -&gt; set seconds=0  </li> <li>v0.2.0-a3 2024/06/29<ul> <li>change parameter name in Seis.make.(2024/06/27)     stnelv_m -&gt; stnelv_m</li> <li>enhance Seis.make 2024/06/29     None or np.nan for ptime and stime is now acceptable     when P or S arrival is absent.</li> <li>change Seis.make 2024/06/29     savefp is now splited into savedir and savename.</li> <li>enhance Seis.read 2024/06/29     io.StringIO is acceptable for input \"fp\",      when directly read a text of seis file.</li> <li>add Seis.read_seis 2024/06/29</li> </ul> </li> <li>v0.2.0-a4 2024/8/13<ul> <li>bug fix: Seis.add     Solved the problem that self.reftime was not changed when self.reftime &gt; other.reftime,</li> </ul> </li> </ul> </li> </ul>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.logger","title":"<code>logger = logging.getLogger(__name__)</code>  <code>module-attribute</code>","text":""},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis","title":"<code>Seis</code>","text":"<p>Class for seis file of win. Contains reference time and picked arrival times. If no pick, the arrival time is set to 0.</p> <p>.. versionadded:: 0.2.0</p> <p>Attributes:</p> Name Type Description <code>reftime</code> <code>datetime</code> <p>A reference time of arrival times for line 1 of seis file.</p> <code>arrivals</code> <code>DataFrame</code> <p>A table of stations and arrival times for line &gt;= 2 of seis file. The table should have columns below:     - stncode: str         Station code.     - polarity: str         Polarity of P wave.         If no data, should be set to \".\".     - ptime: float         Arrival time of P wave.         Defined as seconds from <code>reftime</code>.     - pcert: float         Certainty of arrival time of P wave .     - stime: float         Arrival time of S wave.     - scert: float         Certainty of arrival time of S wave.     - fptime: float         F-P time.     - maxamp: float         Maximum amplitude.     - stnlat: float         Latitude of station.     - stnlon: float         Longitude of station.     - stnelv_m: float         Elevation of station.     - pcorrection: float         Correction of P wave.     - scorrection: float         Correction of S wave.</p> See Also <ul> <li> <p>WIN System Official documentation     https://wwweic.eri.u-tokyo.ac.jp/WIN/man.ja/pickfile.html</p> <pre><code>seis\n\u5230\u7740\u6642\u523b\u3068\u89b3\u6e2c\u70b9\u5ea7\u6a19\u306e\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3002 win \u306e\u9a13\u6e2c\u60c5\u5831\u30d5\u30a1\u30a4\u30eb\uff08pick\u30d5\u30a1\u30a4\u30eb\uff09\u4e2d\u3067\u306f\u3001 \"#s\"\u3067\u59cb\u307e\u308b\u90e8\u5206\u304b\u3089\"#s\"\u3092\u53d6\u308a\u9664\u3044\u305f\u3082\u306e\u3002\u30d5\u30a3\u30eb\u30bf seis(1W) \u3067 \u4f5c\u308c\u308b\u3002\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f pickfile(1W)\u53c2\u7167\u3002\n\n99/11/09 06:46                   99/11/10 18:26:03\nASO        D   6.854 0.015   0.000 0.000  43.9 1.77e-06   36.64934  139.45970    720\nNIK        U   6.884 0.006   0.000 0.000   0.0 6.84e-06   36.62144  139.49072   1310\nKBH        U   6.963 0.006   0.000 0.000  16.9 1.28e-06   36.65450  139.52824    750\nKRO        U   7.043 0.006   0.000 0.000   0.0 6.89e-07   36.68685  139.49794    865\n\n\uff11\u884c\u76ee\u306f\uff12\u884c\u76ee\u4ee5\u964d\u306e\u79d2\u5358\u4f4d\u306e\u5230\u7740\u6642\u523b\u30c7\u30fc\u30bf\u306e\u57fa\u6e96\u306b\u306a\u308b\u5e74\u301c\u5206\u3001\u304a\u3088\u3073 \u53f3\u5074\u306b\u3053\u306e\u30d5\u30a1\u30a4\u30eb\uff08hypomh\u3078\u306e\u5165\u529b\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u4f5c\u3063\u305f\u6642\u523b\u304c\u5165\u308a\u307e\u3059\u3002\n\uff12\u884c\u76ee\u304b\u3089\u306f\u5404\u884c\u304c\uff11\u3064\u306e\u89b3\u6e2c\u70b9\u306e\u9a13\u6e2c\u30c7\u30fc\u30bf\u3067\u3001\u5de6\u304b\u3089\u3001\u89b3\u6e2c\u70b9\u30b3\u30fc\u30c9\u3001 P\u521d\u52d5\u6975\u6027\uff08\u30c7\u30fc\u30bf\u306a\u3057\u306f \".\"\uff09\u3001P\u6642\u523b(s)\u3001P\u7cbe\u5ea6(s)\u3001S\u6642\u523b(s)\u3001S\u7cbe\u5ea6(s)\u3001 F-P\u6642\u9593(s)\u3001\u6700\u5927\u632f\u5e45(m/s\u306e\u3068\u304d\u306e\u307f\u66f8\u304d\u3060\u3055\u308c\u308b)\u3001\u89b3\u6e2c\u70b9\u7def\u5ea6(\u5ea6)\u3001 \u7d4c\u5ea6(\u5ea6)\u3001\u9ad8\u5ea6(m)\u3001P\u306e\u89b3\u6e2c\u70b9\u88dc\u6b63(s)\u3001S\u306e\u89b3\u6e2c\u70b9\u88dc\u6b63(s)\u3067\u3059\u3002 P\u3068S\u306e\u89b3\u6e2c\u70b9\u88dc\u6b63\u306f\u3001\u3053\u306e\u5024\u304c\u5230\u7740\u6642\u523b\u306b\u52a0\u3048\u3089\u308b\u3082\u306e\u3067\u3001\uff10\u306e\u3068\u304d\u306b\u306f \u7701\u7565\u3055\u308c\u307e\u3059\u3002\u6700\u5f8c\u306b\u7a7a\u884c\uff08\"#s\"\u306e\u307f\u306e\u884c\uff09\u304c\uff11\u884c\u3042\u308a\u307e\u3059\u3002\n</code></pre> <p>\u8d70\u6642\u30e2\u30fc\u30c9     P\u3068S\u306e\u5230\u7740\u6642\u523b\u30c7\u30fc\u30bf\u3092\u3059\u3079\u3066\u30bc\u30ed\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> </li> <li> <p>hypomh.f line ~572-578             READ(13,1300,END=40) IYR,MNT,IDY,IHR,MIN        1300 FORMAT(5(I2,1X))             IF(NERQ.EQ.-1) RETURN             I=1           2 READ(13,1310,END=4) SA1(I),POLA1(I),PT1(I),PE1(I),ST1(I),SE1(I),             1XT,AMP(I),ALAT(I),ALNG(I),IAHGT,STCP(I),STCS(I)        1310 FORMAT(A10,1X,A1,2(F8.3,F6.3),F6.1,E9.2,2F11.5,I7,2F7.3)</p> </li> </ul>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.arrivals","title":"<code>arrivals = arrivals</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.fp","title":"<code>fp = None</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.reftime","title":"<code>reftime = reftime</code>  <code>instance-attribute</code>","text":""},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.__add__","title":"<code>__add__(other)</code>","text":"<p>Concat two Seis objects. Reference time will be set to the min of two reference times.</p>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.__getitem__","title":"<code>__getitem__(index)</code>","text":"<p>Return a Seis object with given rows.</p>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.__init__","title":"<code>__init__(reftime=None, arrivals=None)</code>","text":""},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.__len__","title":"<code>__len__()</code>","text":""},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.__str__","title":"<code>__str__()</code>","text":"<p>Return text for seis file.</p>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.change_reftime","title":"<code>change_reftime(newreftime)</code>","text":"<p>Shift reference time of arrival picks.</p> <p>Parameters:</p> Name Type Description Default <code>newreftime</code> <code>datetime</code> <p>A new reference time but only units greater than minute are used.</p> required"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.make","title":"<code>make(refyy, refmm, refdd, refHH, refMM, stnlat, stnlon, stnelv_m, stncode, polarity=[], ptime=[], pcert=[], stime=[], scert=[], fptime=[], maxamp=[], pcorrection=[], scorrection=[], savedir='.', savename=None, overwrite=False, save=False)</code>  <code>staticmethod</code>","text":"<p>Generate text for seis file.</p> <p>.. versionadded:: 0.2.0</p> <p>Parameters:</p> Name Type Description Default <code>refyy</code> <code>int</code> <p>Year of reference time.</p> required <code>refmm</code> <code>int</code> <p>Month of reference time.</p> required <code>refdd</code> <code>int</code> <p>Date of reference time.</p> required <code>refHH</code> <code>int</code> <p>Hour of reference time.</p> required <code>refMM</code> <code>int</code> <p>Minute of reference time.</p> required <code>stnlat</code> <code>list[float]</code> <p>Latitude of stations.</p> required <code>stnlon</code> <code>list[float]</code> <p>Longitude of stations.</p> required <code>stnelv_m</code> <code>list[float]</code> <p>Elevation of stations [m].</p> required <code>stncode</code> <code>list[str]</code> <p>Station codes. Its length should be shorter than 10 characters.</p> required <code>polarity</code> <code>list[str]</code> <p>Polarity of P wave. \"U\"(Up), \"D\"(Down), \".\"(No data) are allowed. If not given, all polarities will be set to \".\".</p> <code>[]</code> <code>ptime</code> <code>list[float]</code> <p>Arrival time of P wave in seconds from the referential time(given by refyy,refmm,...,refMM). If there is no pick of P arrival at the certain channel, please set the value to None or np.nan. At that case, pcert will be automatically set to 0 at that channel.</p> <code>[]</code> <code>stime</code> <code>list[float]</code> <p>Arrival time of S wave in seconds from the referential time(given by refyy,refmm,...,refMM). If there is no pick of P arrival at the certain channel, please set the value to None or np.nan. At that case, pcert will be automatically set to 0 at that channel.</p> <code>[]</code> <code>pcert</code> <code>list[float]</code> <p>Certainty of arrival time of P wave. If ptime is None or np.nan,  this value will be automatically set to 0.</p> <code>[]</code> <code>scert</code> <code>list[float]</code> <p>Certainty of arrival time of S wave. If stime is None or np.nan,  this value will be automatically set to 0.</p> <code>[]</code> <code>fptime</code> <code>list[float]</code> <p>F-P time in second. If not given, set to 0.</p> <code>[]</code> <code>maxamp</code> <code>list[float]</code> <p>Maximum amplitude. If not given, set to 0.</p> <code>[]</code> <code>pcorrection</code> <code>list[float]</code> <p>Station correction value [s] for P wave. If not given, set to 0.</p> <code>[]</code> <code>scorrection</code> <code>list[float]</code> <p>Station correction value [s] for S wave. If not given, set to 0.</p> <code>[]</code>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.read","title":"<code>read(fp)</code>","text":"<p>read a seis file of win. reference time and arrival picks are stored in self.reftime and self.arrivals.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>File path to seis file. StringIO of the text of seis file is also acceptable.</p> required"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.Seis.write","title":"<code>write(outdir, outname=None, overwrite=False)</code>","text":"<p>Convert Seis into text and save as a seis file.</p> <p>Parameters:</p> Name Type Description Default <code>outdir</code> <code>str</code> <p>Directory to save the seis file.</p> required <code>outname</code> <code>str</code> <p>File name of the seis file. If None, the basename of self.fp is used.</p> <code>None</code> <code>overwrite</code> <code>bool</code> <p>If True, allow to overwrite the file with same file path.</p> <code>False</code>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.jma2win4seis","title":"<code>jma2win4seis(catalog, tbl, save=False, savedir='seis')</code>","text":"<p>jma\u306e\u30ab\u30bf\u30ed\u30b0\u3068das\u306e\u30c1\u30e3\u30cd\u30eb\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u8d70\u6642\u8a08\u7b97\u7528\u306eseis\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\uff0e</p>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.linux","title":"<code>linux(command, verbose=False)</code>","text":""},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.mkseis","title":"<code>mkseis(refyy, refmm, refdd, refHH, refMM, stnlat, stnlon, stnelv_m, stncode, polarity=[], ptime=[], pcert=[], stime=[], scert=[], fptime=[], maxamp=[], pcorrection=[], scorrection=[], savefp=[], save=False)</code>","text":"<p>Old version of Seis.make and had moved to Seis.make. Support had stopped after v0.1.2. Will be removed in v0.2.1.</p>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.read_seis","title":"<code>read_seis(fp)</code>","text":"<p>Read a seis file of win and return a Seis object.</p>"},{"location":"module/hypomh/seis/#wintools.lib.seis.seis.yy2yyyy","title":"<code>yy2yyyy(yy)</code>","text":"<p>Convert yy of hypomh to yyyy.</p>"},{"location":"module/hypomh/stan/","title":"Stan","text":""},{"location":"module/hypomh/stan/#wintools.lib.stan.stan.logger","title":"<code>logger = logging.getLogger(__name__)</code>  <code>module-attribute</code>","text":""},{"location":"module/hypomh/stan/#wintools.lib.stan.stan.jma2stan","title":"<code>jma2stan(fp, outdir='', save=False, **kwargs)</code>","text":"<p>JMA\u306e\u901f\u5ea6\u69cb\u9020\u304b\u3089win\u306e\u901f\u5ea6\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\uff0e mkwinstruct\u3092\u4f7f\u7528\uff0e</p>"},{"location":"module/hypomh/stan/#wintools.lib.stan.stan.linux","title":"<code>linux(command, verbose=False)</code>","text":""},{"location":"module/hypomh/stan/#wintools.lib.stan.stan.mkwinstruct","title":"<code>mkwinstruct(lat=35.5, lon=139.5, dep=30.0, vp=[5.5, 5.51, 6.1, 6.11, 6.7, 6.71, 8.0, 8.2], laythick=[4.0, 0.01, 10.6, 0.01, 16.9, 0.01, 600.0], structname='ABC', unc_t=5.0, unc_lat=100.0, unc_lon=100.0, unc_dep=30.0, save=False, savedir='.', savename=None, **kwargs)</code>","text":"<p>win\u306e\u901f\u5ea6\u69cb\u9020\u3092\u4f5c\u6210\u3057\u3066\uff0c\u30c6\u30ad\u30b9\u30c8\u3092return\u3059\u308b\uff0e \u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u306f\u51fa\u529b\u3055\u308c\u308b\u30c6\u30ad\u30b9\u30c8\u3092\u5225\u9014\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u4fdd\u5b58\u3059\u308b\u3053\u3068\uff0e</p>"},{"location":"module/hypomh/stan/#wintools.lib.stan.stan.yy2yyyy","title":"<code>yy2yyyy(yy)</code>","text":"<p>Convert yy of hypomh to yyyy.</p>"},{"location":"module/winfile/read/","title":"\u8aad\u307f\u8fbc\u307f","text":"<p>Module for reading WIN data (2024/09/14)</p> <p>Modules for parsing WIN data (2024/09/14).</p>"},{"location":"module/winfile/read/#wintools.lib.win.reader.core.__get_timerangelist__","title":"<code>__get_timerangelist__(fps)</code>","text":"<p>\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u306e\u958b\u59cb\u6642\u523b\u3068\u7d42\u4e86\u6642\u523b\u306e\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\uff0e</p>"},{"location":"module/winfile/read/#wintools.lib.win.reader.core.__read1file__","title":"<code>__read1file__(fp, chnumber=None)</code>","text":"<p>Read 1 file and return data.</p>"},{"location":"module/winfile/read/#wintools.lib.win.reader.core.__readwin__","title":"<code>__readwin__(fp, chnumber=None, targettime=None, beforesec=None, aftersec=None, filenameformat=None)</code>","text":"<p>Load WIN file(s).</p>"},{"location":"module/winfile/read/#wintools.lib.win.reader.parser.bit_parser.__1s_to_ch__","title":"<code>__1s_to_ch__(bit1s)</code>","text":"<p>For debugging. Split 1 sec data to channel data. Use after split1s. (created 2024/09/21)</p> <p>Parameters:</p> Name Type Description Default <code>bitarray</code> <p>bitarray of 1 s WIN data.</p> required"},{"location":"module/winfile/read/#wintools.lib.win.reader.parser.bit_parser.__get_starttime__","title":"<code>__get_starttime__(bitarray1s)</code>","text":""},{"location":"module/winfile/read/#wintools.lib.win.reader.parser.bit_parser.__read_1chbit__","title":"<code>__read_1chbit__(bit1ch, starttime=None)</code>","text":"<p>Convert 1s 1 channel unit bit data to numpy array.</p> <p>Parameters:</p> Name Type Description Default <code>bit1ch</code> <code>bitarray</code> <p>1s 1 channel unit bit data.</p> required"},{"location":"module/winfile/read/#wintools.lib.win.reader.parser.bit_parser.__read_1s_header__","title":"<code>__read_1s_header__(bit1s)</code>","text":""},{"location":"module/winfile/read/#wintools.lib.win.reader.parser.bit_parser.__read_chheader__","title":"<code>__read_chheader__(bit1ch)</code>","text":"<p>Get channel header. (created 2024/09/21)</p>"},{"location":"module/winfile/read/#wintools.lib.win.reader.parser.bit_parser.__split1s__","title":"<code>__split1s__(fp, return_starttime=False)</code>","text":"<p>Open WIN file and split into each 1s segment.</p>"},{"location":"module/winfile/read/#wintools.lib.win.reader.parser.bit_parser.__split_1s_to_1ch__","title":"<code>__split_1s_to_1ch__(bit1s)</code>","text":""},{"location":"module/winfile/winclass/","title":"WIN\u30c7\u30fc\u30bf\u30af\u30e9\u30b9","text":"<p>Classes to handle WIN data.</p> <p>-v0.3.0-a1     - created 2024/09/14     - enhanced: from_obspy 2024/09/14     - add WIN.select 2024/09/20     - add some properties to WIN1ch and WIN 2024/09/20     - add WIN.setitem, add, len, WIN1ch.add 2024/09/20     - add WIN.write 2024/09/21     - bug fix: WIN.plot 2024/09/21         handling of starttime and endtime</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params","title":"<code>Params</code>  <code>dataclass</code>","text":"<p>Class to handle parameters of WIN data.</p> <p>Parameters:</p> Name Type Description Default <code>station</code> <code>str</code> <p>Station code.</p> <code>None</code> <code>component</code> <code>str</code> <p>Component code.</p> <code>None</code> <code>fs</code> <code>float</code> <p>Sampling frequency.</p> <code>None</code> <code>calib</code> <code>float</code> <p>Calibration factor to convert bit to physical value.</p> <code>1</code> <code>unit</code> <code>str</code> <p>Unit of the data.</p> <code>None</code>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.apply_calib","title":"<code>apply_calib: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.calib","title":"<code>calib: float = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.chtable","title":"<code>chtable: pd.Series = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.component","title":"<code>component: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.dt","title":"<code>dt</code>  <code>property</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.fmax","title":"<code>fmax: float = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.fmin","title":"<code>fmin: float = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.fs","title":"<code>fs: float = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.station","title":"<code>station: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.unit","title":"<code>unit: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.__init__","title":"<code>__init__(station=None, component=None, fs=None, calib=1, apply_calib=False, unit=None, fmin=None, fmax=None, chtable=None)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.Params.__repr__","title":"<code>__repr__()</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN","title":"<code>WIN</code>  <code>dataclass</code>","text":"<p>Class to hold multiple WIN data. It is preferable that each sampling frequency is constant.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <p>It holds channel number as index and WIN1ch class as data.</p> required <code>chtable</code> <code>Series</code> <p>Loaded channel table. Use read_chtable(fp) to load channel table.</p> <code>None</code>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.chtable","title":"<code>chtable: pd.Series = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.chtablefp","title":"<code>chtablefp: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.data","title":"<code>data = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.fp","title":"<code>fp: list[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.__add__","title":"<code>__add__(other)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.__getitem__","title":"<code>__getitem__(key)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.__init__","title":"<code>__init__(fp=None, chtablefp=None, chtable=None)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.__len__","title":"<code>__len__()</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.__radd__","title":"<code>__radd__(other)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.__repr__","title":"<code>__repr__()</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.__setitem__","title":"<code>__setitem__(key, value)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.__to_bit__","title":"<code>__to_bit__(sample_size=None, boundary='cut')</code>","text":"<p>Convert to WIN binary format. Return DataFrame of bitarray for each 1s vs ch.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.calib","title":"<code>calib()</code>","text":"<p>Apply calibration factor to data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.decalib","title":"<code>decalib()</code>","text":"<p>Remove calibration factor from data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.from_obspy","title":"<code>from_obspy(st)</code>  <code>staticmethod</code>","text":"<p>Convert Obspy Stream class to WIN class.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.plot","title":"<code>plot(title='', lw=0.5, c='k', **kwargs)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.read","title":"<code>read(fp, sort=True, ch=None, targettime=None, beforesec=None, aftersec=None, filenameformat=None)</code>","text":"<p>Read WIN files.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>list[str]</code> <p>File path of WIN data.</p> required <code>sort</code> <code>bool</code> <p>If True, sort the returned data by channel number.</p> <code>True</code> <code>ch</code> <code>list[str]</code> <p>List of channel number to exclusively read.</p> <code>None</code> <code>targettime</code> <code>datetime</code> <p>Target time to read data.</p> <code>None</code> <code>beforesec</code> <code>int</code> <p>Time before the target time to read.</p> <code>None</code> <code>aftersec</code> <code>int</code> <p>Time after the target time to read.</p> <code>None</code> <code>filenameformat</code> <code>str</code> <p>Format of the file name.</p> <code>None</code>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.read_chtable","title":"<code>read_chtable(fp, encoding='utf-8', apply_calib=False)</code>","text":"<p>Read channel table file.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.select","title":"<code>select(station=None, component=None)</code>","text":"<p>Select data based on station and component. Supports wildcards using regular expressions.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.to_obspy","title":"<code>to_obspy()</code>","text":"<p>Convert to Obspy Stream class.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.trim","title":"<code>trim(starttime=None, endtime=None)</code>","text":"<p>Trim data based on time.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN.write","title":"<code>write(savename=None, savedir=None, sample_size=None, boundary='cut')</code>","text":"<p>Write WIN file.</p> <p>Parameters:</p> Name Type Description Default <code>dst</code> <p>Destination path. Directory or file path. If Directory is given, file name will be automatically generated.</p> required"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch","title":"<code>WIN1ch</code>  <code>dataclass</code>","text":"<p>Class to handle WIN data of 1 channel. It is preferable the sampling frequency is constant.</p> <p>Parameters:</p> Name Type Description Default <code>ch</code> <p>Channel name.</p> required <code>data</code> <p>Data of the channel.</p> required <code>time</code> <p>Time of the data. Should has same size as data.</p> required <code>params</code> <p>Parameters of the data.</p> required"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.ch","title":"<code>ch: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.data","title":"<code>data: np.ndarray = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.endtime","title":"<code>endtime</code>  <code>property</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.params","title":"<code>params = Params()</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.starttime","title":"<code>starttime</code>  <code>property</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.time","title":"<code>time: np.ndarray = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.timelength","title":"<code>timelength</code>  <code>property</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.__add__","title":"<code>__add__(other)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.__getitem__","title":"<code>__getitem__(key)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.__init__","title":"<code>__init__()</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.__len__","title":"<code>__len__()</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.__radd__","title":"<code>__radd__(other)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.__repr__","title":"<code>__repr__()</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.__str__","title":"<code>__str__()</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.__to_bit__","title":"<code>__to_bit__(sample_size=None, boundary='cut')</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.calib","title":"<code>calib()</code>","text":"<p>Apply calibration factor to data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.copy","title":"<code>copy()</code>","text":"<p>Return a copy of the data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.cumsum","title":"<code>cumsum()</code>","text":"<p>Calculate integration of data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.decalib","title":"<code>decalib()</code>","text":"<p>Remove calibration factor from data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.demean","title":"<code>demean()</code>","text":"<p>Remove mean from data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.detrend","title":"<code>detrend()</code>","text":"<p>Remove trend from data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.from_obspy","title":"<code>from_obspy(tr)</code>  <code>staticmethod</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.get_fs","title":"<code>get_fs()</code>","text":"<p>A function to get sampling frequency from time axis and hold it in self.params.fs. If sampling frequency is not constant, it will return None.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.gradient","title":"<code>gradient()</code>","text":"<p>Calculate gradient of data.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.plot","title":"<code>plot(title='', lw=0.5, c='k', **kwargs)</code>","text":""},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.to_obspy","title":"<code>to_obspy()</code>","text":"<p>Convert to Obspy Trace class.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.trim","title":"<code>trim(starttime=None, endtime=None, contain_end=True)</code>","text":"<p>Trim data based on time.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.WIN1ch.write","title":"<code>write(fp, **kwargs)</code>","text":"<p>Write WIN file.</p>"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.from_obspy","title":"<code>from_obspy(obspy_data, chtable=None, encoding='utf-8', apply_calib=False)</code>","text":"<p>Generate WIN or WIN1ch class from Obspy Stream or Trace class.</p> <p>Parameters:</p> Name Type Description Default <code>obspy_data</code> <p>Obspy Stream or Trace class.</p> required"},{"location":"module/winfile/winclass/#wintools.lib.win.winclass.read","title":"<code>read(fp, chtable=None, encoding='utf-8', apply_calib=False, **kwargs)</code>","text":"<p>Read WIN file(s). If there is a channel table file whose name is fp+\".ch\",  the channel table is automatically read. If channel table is given, it will be loaded and applied to the data.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>list[str]</code> <p>File path of WIN data.</p> required <code>chtable</code> <code>str</code> <p>File path of channel table, by default None</p> <code>None</code> <code>encoding</code> <code>str</code> <p>Encoding of the channel table, by default \"utf-8\"</p> <code>'utf-8'</code> <code>apply_calib</code> <code>bool</code> <p>If True, apply calibration factor to output data, by default False</p> <code>False</code> <p>Returns:</p> Name Type Description <code>win</code> <code>WIN or WIN1ch</code> <p>WIN or WIN1ch class.</p>"},{"location":"traveltime/","title":"hypomh\u306b\u3088\u308b\u8d70\u6642\u8a08\u7b97","text":""},{"location":"utils/","title":"utils","text":""},{"location":"utils/#_1","title":"\u6982\u8981","text":"<p>\u4e00\u822c\u7684\u306b\u4f7f\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\uff0e \u65e5\u4ed8\u64cd\u4f5c\u306a\u3069\uff0e</p>"},{"location":"utils/#wintools.utils.linux","title":"<code>linux(command, verbose=False)</code>","text":""},{"location":"utils/#wintools.utils.yy2yyyy","title":"<code>yy2yyyy(yy)</code>","text":"<p>Convert yy of hypomh to yyyy.</p>"}]}